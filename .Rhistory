hist(peliculas$actorAmout)
x0 <- peliculas$actorsAmount
y0 <- peliculas$revenue
# Plot with main and axis titles
# Change point shape (pch = 21) and remove frame.
plot(x0, y0, main = " Cantidad de actores vs Ingresos",
xlab = "Cantidad de actores", ylab = "Ingresos",
pch = 21, frame = FALSE)
abline(lm(y0 ~ x0, data = peliculas), col = "red")
correlation5 <- data.frame(budget=c(peliculas$actorsAmount), revenue=c(peliculas$revenue))
#fit regression model
correlation6 <- lm(actorsAmount~revenue, data=peliculas)
summary(correlation6)
hist(peliculas$actorsAmount)
x0 <- peliculas$actorsAmount
y0 <- peliculas$revenue
# Plot with main and axis titles
# Change point shape (pch = 21) and remove frame.
plot(x0, y0, main = " Cantidad de actores vs Ingresos",
xlab = "Cantidad de actores", ylab = "Ingresos",
pch = 21, frame = FALSE)
abline(lm(y0 ~ x0, data = peliculas), col = "red")
correlation5 <- data.frame(budget=c(peliculas$actorsAmount), revenue=c(peliculas$revenue))
#fit regression model
correlation6 <- lm(actorsAmount~revenue, data=peliculas)
summary(correlation6)
hist(peliculas$actorsAmount, xlab = "Año de Lanzamiento", ylab="Cantidad",col="yellow",border="blue", xlim =c(1902,2022), ylim =c(0,1200), breaks = 50)
x0 <- peliculas$actorsAmount
y0 <- peliculas$revenue
# Plot with main and axis titles
# Change point shape (pch = 21) and remove frame.
plot(x0, y0, main = " Cantidad de actores vs Ingresos",
xlab = "Cantidad de actores", ylab = "Ingresos",
pch = 21, frame = FALSE)
abline(lm(y0 ~ x0, data = peliculas), col = "red")
correlation5 <- data.frame(budget=c(peliculas$actorsAmount), revenue=c(peliculas$revenue))
#fit regression model
correlation6 <- lm(actorsAmount~revenue, data=peliculas)
summary(correlation6)
hist(peliculas$actorsAmount, xlab = "Año de Lanzamiento", ylab="Cantidad",col="yellow",border="blue", xlim =c(1902,2022), ylim =c(0,1200), breaks = 100)
x0 <- peliculas$actorsAmount
y0 <- peliculas$revenue
# Plot with main and axis titles
# Change point shape (pch = 21) and remove frame.
plot(x0, y0, main = " Cantidad de actores vs Ingresos",
xlab = "Cantidad de actores", ylab = "Ingresos",
pch = 21, frame = FALSE)
abline(lm(y0 ~ x0, data = peliculas), col = "red")
correlation5 <- data.frame(budget=c(peliculas$actorsAmount), revenue=c(peliculas$revenue))
#fit regression model
correlation6 <- lm(actorsAmount~revenue, data=peliculas)
summary(correlation6)
hist(peliculas$actorsAmount, xlab = "Año de Lanzamiento", ylab="Cantidad",col="yellow",border="blue", xlim =c(1902,2022), ylim =c(0,4000), breaks = 100)
x0 <- peliculas$actorsAmount
y0 <- peliculas$revenue
# Plot with main and axis titles
# Change point shape (pch = 21) and remove frame.
plot(x0, y0, main = " Cantidad de actores vs Ingresos",
xlab = "Cantidad de actores", ylab = "Ingresos",
pch = 21, frame = FALSE)
abline(lm(y0 ~ x0, data = peliculas), col = "red")
correlation5 <- data.frame(budget=c(peliculas$actorsAmount), revenue=c(peliculas$revenue))
#fit regression model
correlation6 <- lm(actorsAmount~revenue, data=peliculas)
summary(correlation6)
hist(peliculas$actorsAmount, xlab = "Año de Lanzamiento", ylab="Cantidad",col="yellow",border="blue", xlim =c(1990,2022), ylim =c(0,4000), breaks = 30)
x0 <- peliculas$actorsAmount
y0 <- peliculas$revenue
# Plot with main and axis titles
# Change point shape (pch = 21) and remove frame.
plot(x0, y0, main = " Cantidad de actores vs Ingresos",
xlab = "Cantidad de actores", ylab = "Ingresos",
pch = 21, frame = FALSE)
abline(lm(y0 ~ x0, data = peliculas), col = "red")
correlation5 <- data.frame(budget=c(peliculas$actorsAmount), revenue=c(peliculas$revenue))
#fit regression model
correlation6 <- lm(actorsAmount~revenue, data=peliculas)
summary(correlation6)
hist(peliculas$actorsAmount, xlab = "Año de Lanzamiento", ylab="Cantidad",col="yellow",border="blue", xlim =c(1990,2022), ylim =c(0,100), breaks = 30)
x0 <- peliculas$actorsAmount
y0 <- peliculas$revenue
# Plot with main and axis titles
# Change point shape (pch = 21) and remove frame.
plot(x0, y0, main = " Cantidad de actores vs Ingresos",
xlab = "Cantidad de actores", ylab = "Ingresos",
pch = 21, frame = FALSE)
abline(lm(y0 ~ x0, data = peliculas), col = "red")
correlation5 <- data.frame(budget=c(peliculas$actorsAmount), revenue=c(peliculas$revenue))
#fit regression model
correlation6 <- lm(actorsAmount~revenue, data=peliculas)
summary(correlation6)
hist(peliculas$actorsAmount)
x0 <- peliculas$actorsAmount
y0 <- peliculas$revenue
# Plot with main and axis titles
# Change point shape (pch = 21) and remove frame.
plot(x0, y0, main = " Cantidad de actores vs Ingresos",
xlab = "Cantidad de actores", ylab = "Ingresos",
pch = 21, frame = FALSE)
abline(lm(y0 ~ x0, data = peliculas), col = "red")
correlation5 <- data.frame(budget=c(peliculas$actorsAmount), revenue=c(peliculas$revenue))
#fit regression model
correlation6 <- lm(actorsAmount~revenue, data=peliculas)
summary(correlation6)
hist(peliculas$actorsAmount, xlab = peliculas$releaseYear, ylab=peliculas$actorsAmount,col="yellow",border="blue", xlim =c(1990,2022), ylim =c(0,100), breaks = 30)
x0 <- peliculas$actorsAmount
y0 <- peliculas$revenue
# Plot with main and axis titles
# Change point shape (pch = 21) and remove frame.
plot(x0, y0, main = " Cantidad de actores vs Ingresos",
xlab = "Cantidad de actores", ylab = "Ingresos",
pch = 21, frame = FALSE)
abline(lm(y0 ~ x0, data = peliculas), col = "red")
correlation5 <- data.frame(budget=c(peliculas$actorsAmount), revenue=c(peliculas$revenue))
#fit regression model
correlation6 <- lm(actorsAmount~revenue, data=peliculas)
summary(correlation6)
hist(peliculas$actorsAmount, xlab = peliculas$releaseYear, ylab=peliculas$actorsAmount,col="yellow",border="blue", xlim =c(1990,2022), ylim =c(0,100), breaks = 32)
x0 <- peliculas$actorsAmount
y0 <- peliculas$revenue
# Plot with main and axis titles
# Change point shape (pch = 21) and remove frame.
plot(x0, y0, main = " Cantidad de actores vs Ingresos",
xlab = "Cantidad de actores", ylab = "Ingresos",
pch = 21, frame = FALSE)
abline(lm(y0 ~ x0, data = peliculas), col = "red")
correlation5 <- data.frame(budget=c(peliculas$actorsAmount), revenue=c(peliculas$revenue))
#fit regression model
correlation6 <- lm(actorsAmount~revenue, data=peliculas)
summary(correlation6)
ggplot(peliculas, aes(x=`peliculas$releaseYear`, y= `peliculas$actorsAmount`, fill= `peliculas$actorsAmount`)) + geom_col(position ="dodge")
x0 <- peliculas$actorsAmount
y0 <- peliculas$revenue
# Plot with main and axis titles
# Change point shape (pch = 21) and remove frame.
plot(x0, y0, main = " Cantidad de actores vs Ingresos",
xlab = "Cantidad de actores", ylab = "Ingresos",
pch = 21, frame = FALSE)
abline(lm(y0 ~ x0, data = peliculas), col = "red")
correlation5 <- data.frame(budget=c(peliculas$actorsAmount), revenue=c(peliculas$revenue))
#fit regression model
correlation6 <- lm(actorsAmount~revenue, data=peliculas)
summary(correlation6)
ggplot(peliculas, aes(x=`peliculas$releaseYear`, y= `peliculas$actorsAmount`, fill= freq)) + geom_col(position ="dodge")
x0 <- peliculas$actorsAmount
y0 <- peliculas$revenue
# Plot with main and axis titles
# Change point shape (pch = 21) and remove frame.
plot(x0, y0, main = " Cantidad de actores vs Ingresos",
xlab = "Cantidad de actores", ylab = "Ingresos",
pch = 21, frame = FALSE)
abline(lm(y0 ~ x0, data = peliculas), col = "red")
correlation5 <- data.frame(budget=c(peliculas$actorsAmount), revenue=c(peliculas$revenue))
#fit regression model
correlation6 <- lm(actorsAmount~revenue, data=peliculas)
summary(correlation6)
ggplot(peliculas, aes(x=peliculas$releaseYear, y= peliculas$actorsAmount, fill= peliculas$actorsAmount)) + geom_col(position ="dodge")
x0 <- peliculas$actorsAmount
y0 <- peliculas$revenue
# Plot with main and axis titles
# Change point shape (pch = 21) and remove frame.
plot(x0, y0, main = " Cantidad de actores vs Ingresos",
xlab = "Cantidad de actores", ylab = "Ingresos",
pch = 21, frame = FALSE)
abline(lm(y0 ~ x0, data = peliculas), col = "red")
correlation5 <- data.frame(budget=c(peliculas$actorsAmount), revenue=c(peliculas$revenue))
#fit regression model
correlation6 <- lm(actorsAmount~revenue, data=peliculas)
summary(correlation6)
ggplot(peliculas, aes(x=peliculas$releaseYear, y= peliculas$actorsAmount, fill= freq)) + geom_col(position ="dodge")
x0 <- peliculas$actorsAmount
y0 <- peliculas$revenue
# Plot with main and axis titles
# Change point shape (pch = 21) and remove frame.
plot(x0, y0, main = " Cantidad de actores vs Ingresos",
xlab = "Cantidad de actores", ylab = "Ingresos",
pch = 21, frame = FALSE)
abline(lm(y0 ~ x0, data = peliculas), col = "red")
correlation5 <- data.frame(budget=c(peliculas$actorsAmount), revenue=c(peliculas$revenue))
#fit regression model
correlation6 <- lm(actorsAmount~revenue, data=peliculas)
summary(correlation6)
ggplot(peliculas, aes(x=peliculas$releaseYear, y= peliculas$actorsAmount, fill= releaseYear)) + geom_col(position ="dodge")
x0 <- peliculas$actorsAmount
y0 <- peliculas$revenue
# Plot with main and axis titles
# Change point shape (pch = 21) and remove frame.
plot(x0, y0, main = " Cantidad de actores vs Ingresos",
xlab = "Cantidad de actores", ylab = "Ingresos",
pch = 21, frame = FALSE)
abline(lm(y0 ~ x0, data = peliculas), col = "red")
correlation5 <- data.frame(budget=c(peliculas$actorsAmount), revenue=c(peliculas$revenue))
#fit regression model
correlation6 <- lm(actorsAmount~revenue, data=peliculas)
summary(correlation6)
ggplot(peliculas, aes(x=peliculas$releaseYear, y= peliculas$actorsAmount, fill= peliculas$actorsAmount)) + geom_col(position ="dodge")
revenue <- arrange(peliculas, desc(peliculas$revenue))
head (select(revenue, "originalTitle", "revenue"),10)
x0 <- peliculas$actorsAmount
y0 <- peliculas$revenue
# Plot with main and axis titles
# Change point shape (pch = 21) and remove frame.
plot(x0, y0, main = " Cantidad de actores vs Ingresos",
xlab = "Cantidad de actores", ylab = "Ingresos",
pch = 21, frame = FALSE)
abline(lm(y0 ~ x0, data = peliculas), col = "red")
correlation5 <- data.frame(budget=c(peliculas$actorsAmount), revenue=c(peliculas$revenue))
#fit regression model
correlation6 <- lm(actorsAmount~revenue, data=peliculas)
summary(correlation6)
plot(peliculas[c,("actorsAmount","releaseYear")])
x0 <- peliculas$actorsAmount
y0 <- peliculas$revenue
# Plot with main and axis titles
# Change point shape (pch = 21) and remove frame.
plot(x0, y0, main = " Cantidad de actores vs Ingresos",
xlab = "Cantidad de actores", ylab = "Ingresos",
pch = 21, frame = FALSE)
abline(lm(y0 ~ x0, data = peliculas), col = "red")
correlation5 <- data.frame(budget=c(peliculas$actorsAmount), revenue=c(peliculas$revenue))
#fit regression model
correlation6 <- lm(actorsAmount~revenue, data=peliculas)
summary(correlation6)
plot(peliculas[c,("actorsAmount""releaseYear")])
x0 <- peliculas$actorsAmount
y0 <- peliculas$revenue
# Plot with main and axis titles
# Change point shape (pch = 21) and remove frame.
plot(x0, y0, main = " Cantidad de actores vs Ingresos",
xlab = "Cantidad de actores", ylab = "Ingresos",
pch = 21, frame = FALSE)
abline(lm(y0 ~ x0, data = peliculas), col = "red")
correlation5 <- data.frame(budget=c(peliculas$actorsAmount), revenue=c(peliculas$revenue))
#fit regression model
correlation6 <- lm(actorsAmount~revenue, data=peliculas)
summary(correlation6)
plot(peliculas[c,(peliculas$actorsAmount, peliculas$releaseYear)])
x0 <- peliculas$actorsAmount
y0 <- peliculas$revenue
# Plot with main and axis titles
# Change point shape (pch = 21) and remove frame.
plot(x0, y0, main = " Cantidad de actores vs Ingresos",
xlab = "Cantidad de actores", ylab = "Ingresos",
pch = 21, frame = FALSE)
abline(lm(y0 ~ x0, data = peliculas), col = "red")
correlation5 <- data.frame(budget=c(peliculas$actorsAmount), revenue=c(peliculas$revenue))
#fit regression model
correlation6 <- lm(actorsAmount~revenue, data=peliculas)
summary(correlation6)
plot(peliculas[c,(peliculas$actorsAmount)])
x0 <- peliculas$actorsAmount
y0 <- peliculas$revenue
# Plot with main and axis titles
# Change point shape (pch = 21) and remove frame.
plot(x0, y0, main = " Cantidad de actores vs Ingresos",
xlab = "Cantidad de actores", ylab = "Ingresos",
pch = 21, frame = FALSE)
abline(lm(y0 ~ x0, data = peliculas), col = "red")
correlation5 <- data.frame(budget=c(peliculas$actorsAmount), revenue=c(peliculas$revenue))
#fit regression model
correlation6 <- lm(actorsAmount~revenue, data=peliculas)
summary(correlation6)
barplot(max.actorsAmount,
main = "Maximum Temperatures in a Week",
xlab = "Degree Celsius",
ylab = "Day",
names.arg = c("releaseYear"),
col = "darkred",
horiz = TRUE)
x0 <- peliculas$actorsAmount
y0 <- peliculas$revenue
# Plot with main and axis titles
# Change point shape (pch = 21) and remove frame.
plot(x0, y0, main = " Cantidad de actores vs Ingresos",
xlab = "Cantidad de actores", ylab = "Ingresos",
pch = 21, frame = FALSE)
abline(lm(y0 ~ x0, data = peliculas), col = "red")
correlation5 <- data.frame(budget=c(peliculas$actorsAmount), revenue=c(peliculas$revenue))
#fit regression model
correlation6 <- lm(actorsAmount~revenue, data=peliculas)
summary(correlation6)
actors <- arrange(peliculas, desc(peliculas$actorsAmount))
head (select(actors, "releaseYear", "actorsAmount"),10)
x0 <- peliculas$actorsAmount
y0 <- peliculas$revenue
# Plot with main and axis titles
# Change point shape (pch = 21) and remove frame.
plot(x0, y0, main = " Cantidad de actores vs Ingresos",
xlab = "Cantidad de actores", ylab = "Ingresos",
pch = 21, frame = FALSE)
abline(lm(y0 ~ x0, data = peliculas), col = "red")
correlation5 <- data.frame(budget=c(peliculas$actorsAmount), revenue=c(peliculas$revenue))
#fit regression model
correlation6 <- lm(actorsAmount~revenue, data=peliculas)
summary(correlation6)
actors <- arrange(peliculas, desc(peliculas$actorsAmount))
head (select(actors, "originalTitle","releaseYear", "actorsAmount"),10)
x0 <- peliculas$actorsAmount
y0 <- peliculas$revenue
# Plot with main and axis titles
# Change point shape (pch = 21) and remove frame.
plot(x0, y0, main = " Cantidad de actores vs Ingresos",
xlab = "Cantidad de actores", ylab = "Ingresos",
pch = 21, frame = FALSE)
abline(lm(y0 ~ x0, data = peliculas), col = "red")
correlation5 <- data.frame(budget=c(peliculas$actorsAmount), revenue=c(peliculas$revenue))
#fit regression model
correlation6 <- lm(actorsAmount~revenue, data=peliculas)
summary(correlation6)
actors <- arrange(peliculas, desc(peliculas$actorsAmount))
head (select(actors, releaseYear", "actorsAmount"),10)
x0 <- peliculas$actorsAmount
y0 <- peliculas$revenue
# Plot with main and axis titles
# Change point shape (pch = 21) and remove frame.
plot(x0, y0, main = " Cantidad de actores vs Ingresos",
xlab = "Cantidad de actores", ylab = "Ingresos",
pch = 21, frame = FALSE)
abline(lm(y0 ~ x0, data = peliculas), col = "red")
correlation5 <- data.frame(budget=c(peliculas$actorsAmount), revenue=c(peliculas$revenue))
#fit regression model
correlation6 <- lm(actorsAmount~revenue, data=peliculas)
summary(correlation6)
actors <- arrange(peliculas, desc(peliculas$actorsAmount))
head (select(actors, "releaseYear", "actorsAmount"),10)
x0 <- peliculas$actorsAmount
y0 <- peliculas$revenue
# Plot with main and axis titles
# Change point shape (pch = 21) and remove frame.
plot(x0, y0, main = " Cantidad de actores vs Ingresos",
xlab = "Cantidad de actores", ylab = "Ingresos",
pch = 21, frame = FALSE)
abline(lm(y0 ~ x0, data = peliculas), col = "red")
correlation5 <- data.frame(budget=c(peliculas$actorsAmount), revenue=c(peliculas$revenue))
#fit regression model
correlation6 <- lm(actorsAmount~revenue, data=peliculas)
summary(correlation6)
actors <- arrange(peliculas, desc(peliculas$actorsAmount))
head (select(actors, "releaseYear", "actorsAmount"),1000)
x0 <- peliculas$actorsAmount
y0 <- peliculas$revenue
# Plot with main and axis titles
# Change point shape (pch = 21) and remove frame.
plot(x0, y0, main = " Cantidad de actores vs Ingresos",
xlab = "Cantidad de actores", ylab = "Ingresos",
pch = 21, frame = FALSE)
abline(lm(y0 ~ x0, data = peliculas), col = "red")
correlation5 <- data.frame(budget=c(peliculas$actorsAmount), revenue=c(peliculas$revenue))
#fit regression model
correlation6 <- lm(actorsAmount~revenue, data=peliculas)
summary(correlation6)
actors <- arrange(peliculas, desc(peliculas$actorsAmount))
head (select(actors, "releaseYear", "actorsAmount"),40)
knitr::opts_chunk$set(echo = TRUE)
peliculas <- read.csv("./movies.csv", stringsAsFactors = FALSE)
peliculas <- read.csv("/movies.csv", stringsAsFactors = FALSE)
peliculas <- read.csv("movies.csv", stringsAsFactors = FALSE)
peliculas <- read.csv("../movies.csv", stringsAsFactors = FALSE)
peliculas <- read.csv("/movies.csv", stringsAsFactors = FALSE)
peliculas <- read.csv("/movies.csv", stringsAsFactors = FALSE)
peliculas <- read.csv("./movies.csv", stringsAsFactors = FALSE)
View(peliculas)
library(cluster) #Para calcular la silueta
library(e1071)#para cmeans
library(cluster) #Para calcular la silueta
library(e1071)#para cmeans
library(cluster) #Para calcular la silueta
#library(e1071)#para cmeans
library(mclust) #mixtures of gaussians
library("cluster") #Para calcular la silueta
library("e1071")#para cmeans
library(cluster) #Para calcular la silueta
library(e1071)#para cmeans
library(cluster) #Para calcular la silueta
library(e1071)#para cmeans
library(cluster) #Para calcular la silueta
library(e1071)#para cmeans
library(cluster) #Para calcular la silueta
library(e1071)#para cmeans
library(cluster) #Para calcular la silueta
library(e1071)#para cmeans
library(cluster) #Para calcular la silueta
library(e1071)#para cmeans
library(cluster) #Para calcular la silueta
library(e1071)#para cmeans
library(cluster) #Para calcular la silueta
library(e1071)#para cmeans
library(cluster) #Para calcular la silueta
library(e1071)#para cmeans
library(cluster) #Para calcular la silueta
library(e1071)#para cmeans
library(cluster) #Para calcular la silueta
library(e1071)#para cmeans
library(cluster) #Para calcular la silueta
library(e1071)#para cmeans
knitr::opts_chunk$set(echo = TRUE)
library(cluster) #Para calcular la silueta
library(e1071)#para cmeans
View(actors)
install.packages('e1071', dependencies=TRUE)
install.packages('caret', dependencies = TRUE)
library(cluster) #Para calcular la silueta
library(e1071)#para cmeans
library(mclust) #mixtures of gaussians
install.packages('caret', dependencies = TRUE)
install.packages('Seurat')
library(Seurat)
library(cluster) #Para calcular la silueta
library(e1071)#para cmeans
library(mclust) #mixtures of gaussians
#install.packages('caret', dependencies = TRUE)
#install.packages('Seurat')
library(Seurat)
library(cluster) #Para calcular la silueta
library(e1071)#para cmeans
library(mclust) #mixtures of gaussians
#install.packages('caret', dependencies = TRUE)
#install.packages('Seurat')
install.packages("mclust")
library(Seurat)
library(cluster) #Para calcular la silueta
library(e1071)#para cmeans
library(mclust) #mixtures of gaussians
library(fpc) #para hacer el plotcluster
#install.packages('caret', dependencies = TRUE)
#install.packages('Seurat')
install.packages("mclust")
install.packages("fpc")
library(Seurat)
library(cluster) #Para calcular la silueta
library(e1071)#para cmeans
library(mclust) #mixtures of gaussians
library(fpc) #para hacer el plotcluster
library(NbClust) #Para determinar el número de clusters óptimo
#install.packages('caret', dependencies = TRUE)
#install.packages('Seurat')
install.packages("mclust")
install.packages("fpc")
install.packages("nbClust")
install.packages("factoextra")
knitr::opts_chunk$set(echo = TRUE)
library(cluster) #Para calcular la silueta
library(e1071)#para cmeans
library(mclust) #mixtures of gaussians
library(fpc) #para hacer el plotcluster
library(NbClust) #Para determinar el número de clusters óptimo
library(factoextra) #Para hacer gráficos bonitos de clustering
library(hopkins) #Para revisar si vale la pena hacer agrupamiento
library(GGally) #Para hacer el conjunto de graficos
library(FeatureImpCluster) #Para revisar la importancia de las variables en los grupos.
library(pheatmap) #Para hacer mapa de calor
library(cluster) #Para calcular la silueta
library(e1071)#para cmeans
library(mclust) #mixtures of gaussians
library(fpc) #para hacer el plotcluster
library(NbClust) #Para determinar el número de clusters óptimo
library(factoextra) #Para hacer gráficos bonitos de clustering
library(hopkins) #Para revisar si vale la pena hacer agrupamiento
library(GGally) #Para hacer el conjunto de graficos
library(FeatureImpCluster) #Para revisar la importancia de las variables en los grupos.
library(pheatmap) #Para hacer mapa de calor
library(data.table)
movies <- fread("./movies.csv", select = c("popularity", "budget", "revenue", "runtime", "genres", "productionCoAmount", "productionCompanyCountry", "productionCountriesAmount", "releaseDate", "voteCount", "voteAvg", "actorsPopularity", "actorsAmount"))
movies
movies <- fread("./movies.csv", select = c("popularity", "budget", "revenue", "runtime", "productionCoAmount", "productionCompanyCountry", "productionCountriesAmount", "releaseDate", "voteCount", "voteAvg", "actorsPopularity", "actorsAmount"))
movies
movies <- fread("./movies.csv", select = c("popularity", "budget", "revenue", "runtime", "productionCoAmount", "productionCountriesAmount", "releaseDate", "voteCount", "voteAvg", "actorsPopularity", "actorsAmount"))
movies
movies <- fread("./movies.csv", select = c("popularity", "budget", "revenue", "runtime", "productionCoAmount", "productionCountriesAmount", "releaseDate", "voteCount", "voteAvg", "actorsPopularity", "actorsAmount"))
movies
movies <- fread("./movies.csv", select = c("popularity", "budget", "revenue", "runtime", "productionCoAmount", "productionCountriesAmount", "releaseDate", "voteCount", "voteAvg", "actorsAmount"))
movies
movies <- fread("./movies.csv", select = c("popularity", "budget", "revenue", "runtime", "productionCoAmount", "productionCountriesAmount", "voteCount", "voteAvg", "actorsAmount"))
movies
set.seed(123)
hopkins(movies[,1:9])
movies_dist <- dist(movies[,1:9])
fviz_dist(movies_dist, show_labels = F)
movies <- fread("./movies.csv", select = c("popularity", "budget", "revenue", "runtime", "actorsAmount"))
movies
set.seed(123)
hopkins(movies[,1:9])
set.seed(123)
hopkins(movies[,1:5])
movies_dist <- dist(movies[,1:5])
fviz_dist(movies_dist, show_labels = F)
View(yearly2)
View(yearly2)
View(yearly2)
movies <- fread("./movies.csv", select = c("popularity", "budget", "revenue", "runtime", "actorsAmount"))
set.seed(123)
movies<-movies[complete.cases("./movies.csv")]
set.seed(123)
hopkins(movies[,1:5])
movies_dist <- dist(movies[,1:5])
fviz_dist(movies_dist, show_labels = F)
set.seed(123)
hopkins(movies[,1:5])
movies_dist <- dist(movies[,1:5])
fviz_dist(movies_dist, show_labels = F)
movies_dist <- dist(movies[,1:3])
fviz_dist(movies_dist, show_labels = F)
movies_dist <- dist(movies[,1:3])
fviz_dist(movies_dist, show_labels = F)
movies_dist <- dist(movies[1:1000,1:3])
fviz_dist(movies_dist, show_labels = F)
movies_dist <- dist(movies[1:5000,1:3])
fviz_dist(movies_dist, show_labels = F)
movies_dist <- dist(movies[1:5000,1:5])
fviz_dist(movies_dist, show_labels = F)
movies_dist <- dist(movies[1:5000,1:5])
fviz_dist(movies_dist, show_labels = F)
